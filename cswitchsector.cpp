#include "cswitchsector.h"

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CSwitchSector::CSwitchSector(CISector *cISector_Set_Ptr):CDecorator_CISector(cISector_Set_Ptr)
{
}
//----------------------------------------------------------------------------------------------------
//инициализация
//----------------------------------------------------------------------------------------------------
void CSwitchSector::Initialize(void)
{
 cISector_Ptr->Initialize();
 Enabled=true;
}
//----------------------------------------------------------------------------------------------------
//обработка
//----------------------------------------------------------------------------------------------------
void CSwitchSector::Processing(void)
{
 cISector_Ptr->Processing();
}
//----------------------------------------------------------------------------------------------------
//получить сектор для активации
//----------------------------------------------------------------------------------------------------
long CSwitchSector::GetActivatedSectorIndex(void)
{
 return(ActivatedSectorIndex);
}
//----------------------------------------------------------------------------------------------------
//активировать
//----------------------------------------------------------------------------------------------------
void CSwitchSector::Activate(void)
{
 Enabled=false;
}
//----------------------------------------------------------------------------------------------------
//проверка, можно ли активировать сектор из координат (x,y) с максимальным расстоянием активации length
//----------------------------------------------------------------------------------------------------
bool CSwitchSector::CheckActivate(float x,float y,float length,long sector_index)
{
 if (Enabled==false) return(false);
 if (cISector_Ptr->GetIndex()==sector_index) return(true);
 return(false);
}
 