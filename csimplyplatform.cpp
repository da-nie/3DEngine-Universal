#include "csimplyplatform.h"

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CSimplyPlatform::CSimplyPlatform(CISector *cISector_Set_Ptr):CDecorator_CISector(cISector_Set_Ptr)
{
}

//----------------------------------------------------------------------------------------------------
//инициализация
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Initialize(void)
{
 cISector_Ptr->Initialize();
 Time=0;
 OldDown=cISector_Ptr->GetDown();
 Dz=0;
 Locked=false;
}
//----------------------------------------------------------------------------------------------------
//обработка
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Processing(void)
{
 cISector_Ptr->Processing();
 if (Time!=0) Time--;
 if (Time==0) cISector_Ptr->SetDown(cISector_Ptr->GetDown()+Dz);
 if (OldDown<BasedDown)//сектор поднимается при активации
 {
  if (Time==0 && cISector_Ptr->GetDown()<=OldDown)//сектор возвращается в исходное состояние
  {
   cISector_Ptr->SetDown(OldDown);
   Time=0;
   Dz=0;
  }
  if (Time==0 && cISector_Ptr->GetDown()>=BasedDown)//сектор перемещается в активное состояние
  {
   cISector_Ptr->SetDown(BasedDown);
   Time=300;
   Dz=-Dz;
  }
 }


 if (OldDown>BasedDown)//сектор опускается при активации
 {
  if (Time==0 && cISector_Ptr->GetDown()>=OldDown)//сектор возвращается в исходное состояние
  {
   cISector_Ptr->SetDown(OldDown);
   Time=0;
   Dz=0;
  }
  if (Time==0 && cISector_Ptr->GetDown()<=BasedDown)//сектор перемещается в активное состояние
  {
   cISector_Ptr->SetDown(BasedDown);
   Time=300;
   Dz=-Dz;
  }
 }
}
//----------------------------------------------------------------------------------------------------
//активация
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Activate(void)
{
 //шаг подъёма/опускания
 #define LEVEL_STEP 4

 if (Locked==true) return;//платформа заблокирована
 if (OldDown<BasedDown) Dz=LEVEL_STEP;//сектор поднимается при активации
 if (OldDown>BasedDown) Dz=-LEVEL_STEP;//сектор опускается при активации
}
//----------------------------------------------------------------------------------------------------
//заблокировать
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Lock(void)
{
 Locked=true;
}
//----------------------------------------------------------------------------------------------------
//разблокировать
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Unlock(void)
{
 Locked=false;
}
//----------------------------------------------------------------------------------------------------
//загрузка
//----------------------------------------------------------------------------------------------------
void CSimplyPlatform::Load(FILE *file)
{
 cISector_Ptr->Load(file);
 BasedDown=LoadLong(file);
}
 