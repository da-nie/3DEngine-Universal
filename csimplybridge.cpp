#include "csimplybridge.h"

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CSimplyBridge::CSimplyBridge(CISector *cISector_Set_Ptr):CDecorator_CISector(cISector_Set_Ptr)
{
}

//----------------------------------------------------------------------------------------------------
//инициализация
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Initialize(void)
{
 cISector_Ptr->Initialize();
 OldDown=cISector_Ptr->GetDown();
 Dz=0;
 Locked=false;
}
//----------------------------------------------------------------------------------------------------
//обработка
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Processing(void)
{
 cISector_Ptr->Processing();
 cISector_Ptr->SetDown(cISector_Ptr->GetDown()+Dz);
 if (OldDown<BasedDown)//сектор поднимается при активации
 {
  if (cISector_Ptr->GetDown()>=BasedDown)//сектор перемещается в активное состояние
  {
   cISector_Ptr->SetDown(BasedDown);
   Dz=0;
  }
 }

 if (OldDown>BasedDown)//сектор опускается при активации
 {
  if (cISector_Ptr->GetDown()<=BasedDown)//сектор перемещается в активное состояние
  {
   cISector_Ptr->SetDown(BasedDown);
   Dz=0;
  }
 }
}
//----------------------------------------------------------------------------------------------------
//активация
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Activate(void)
{
 if (Locked==true) return;//мостик заблокирован
 if (OldDown<BasedDown) Dz=4;//сектор поднимается при активации
 if (OldDown>BasedDown) Dz=-4;//сектор опускается при активации
}
//----------------------------------------------------------------------------------------------------
//заблокировать
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Lock(void)
{
 Locked=true;
}
//----------------------------------------------------------------------------------------------------
//разблокировать
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Unlock(void)
{
 Locked=false;
}
//----------------------------------------------------------------------------------------------------
//загрузка
//----------------------------------------------------------------------------------------------------
void CSimplyBridge::Load(FILE *file)
{
 cISector_Ptr->Load(file);
 BasedDown=LoadLong(file);
}
 